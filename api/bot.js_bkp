const TwitterApi = require('twitter-api-v2').default;
const { initializeApp, applicationDefault, cert } = require('firebase-admin/app');
const { getFirestore, Timestamp, FieldValue } = require('firebase-admin/firestore');
const serviceAccount = require('./tweetbot11-0baad0dea349.json');

initializeApp({
    credential: cert(serviceAccount)
});

const db = getFirestore().doc('tokens/demo');

const dotenv = require("dotenv")
const fs = require("fs");

dotenv.config()
const textToImage = require('text-to-image');


const twitterClient = new TwitterApi({
    clientId: "N2xROUQ0RE5GSmtqa0dXdmFSV2s6MTpjaQ",
    clientSecret: "uX7Qc4LQfVXHEVSsCOXoinwIO9kk8gRCgsSoq2Fsl5S5Q-Okcm"
})
const options = {
    hostname: 'api.twitter.com',
    path: '/2/tweets/search/stream?tweet.fields=created_at,conversation_id&expansions=author_id,in_reply_to_user_id,referenced_tweets.id.author_id',
    headers: {
        Authorization: `Bearer ${process.env.BEARER_TOKEN}`
    }
}
const https = require('https');

(async function () {
    // do stuff
    const { refreshToken } = (await db.get()).data();
    const {
        client: refreshedClient,
        accessToken,
        refreshToken: newRefreshToken,
    } = await twitterClient.refreshOAuth2Token(refreshToken);

    await db.set({ accessToken, refreshToken: newRefreshToken });
    https.get(options, res => {


        res.on('data', async (chunk) => {
            let data = chunk.toString();
            console.log(data.length)
            if (data.length != 2) {
                try {
                    let dataJson = JSON.parse(data)
                    //console.log(dataJson)

                    let text = dataJson.includes.tweets[dataJson.includes.tweets.length - 1].text.replaceAll(" ", "+")
                    let imageLink = `http://assets.imgix.net/~text?txt=${text}&txt-color=4B5E75`
                    //console.log(dataJson)
                    await twitterClient.v1.uploadMedia('./samurai.jpg')
                    await refreshedClient.v2.tweet(
                        { "text": imageLink, media: "", "reply": { "in_reply_to_tweet_id": dataJson.includes.tweets[0].id, "exclude_reply_user_ids": [dataJson.includes.tweets[0].in_reply_to_user_id] } }
                    );
                    console.log("tweet send")
                }
                catch (e) {
                    console.log(e)
                }

            }


        });

        res.on('end', () => {
            console.log('Response ended: ');


        });
    }).on('error', err => {
        console.log('Error: ', err.message);
    });
})()

